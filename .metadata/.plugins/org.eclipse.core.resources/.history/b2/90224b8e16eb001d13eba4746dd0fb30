package com.onerivet.userbook.service;

import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.onerivet.userbook.model.entity.Designation;
import com.onerivet.userbook.model.entity.Employee;
import com.onerivet.userbook.model.entity.ModeOfWork;
import com.onerivet.userbook.model.entity.Role;
import com.onerivet.userbook.model.entity.WorkingDay;
import com.onerivet.userbook.model.payload.DesignationDto;
import com.onerivet.userbook.model.payload.EmployeeDto;
import com.onerivet.userbook.model.payload.ModeOfWorkDto;
import com.onerivet.userbook.model.payload.RoleDto;
import com.onerivet.userbook.model.payload.WorkingDayDto;
import com.onerivet.userbook.repository.EmployeeRepsitory;

@Service
public class EmployeeImplies implements EmployeeService {
	
	@Autowired
	private EmployeeRepsitory employeeRepsitory;
	
	@Autowired
	private ModelMapper modelMapper;
	
	
	//Entity to DTO
	public EmployeeDto employeetoemployeedto(Employee employee)
	{
		EmployeeDto employeeDto = this.modelMapper.map(employee, EmployeeDto.class);
		return employeeDto;
	}
	
	//DTO to Entity
	public Employee employeedtotoemployee(EmployeeDto employeeDto)
	{
		Employee employee = this.modelMapper.map(employeeDto, Employee.class);
		return employee;
	}
	
	//Entity to DTO
	public ModeOfWorkDto modeofworktomodeofworkdto(ModeOfWork modeofwork)
	{
		ModeOfWorkDto modeOfWorkDto = this.modelMapper.map(modeofwork, ModeOfWorkDto.class);
		return modeOfWorkDto ;
	}
	
	//DTO to Entity
	public ModeOfWork modeofworkdtotomodeofwork(ModeOfWorkDto modeOfWorkDto)
	{
		ModeOfWork modeOfWork = this.modelMapper.map(modeOfWorkDto, ModeOfWork.class);
		return modeOfWork;
	}
	
	//Entity to DTO
	public DesignationDto designationtodesignationdto(Designation designation)
	{
		DesignationDto designationDto = this.modelMapper.map(designation, DesignationDto.class);
		return designationDto;
	}
	
	//DTO to Entity
	public Designation designationdtotodesignation(DesignationDto designationDto)
	{
		Designation designation = this.modelMapper.map(designationDto, Designation.class);
		return designation;
	}
	
	//Entity to Map
	public RoleDto roletoroledto(Role role)
	{
		RoleDto roleDto = this.modelMapper.map(role, RoleDto.class);
		return roleDto;
	}
	
	//DTO to Entity
	public Role roledtotorole(RoleDto roleDto)
	{
		Role role = this.modelMapper.map(roleDto, Role.class);
		return role;
	}
	
	//Entity to DTO
	public WorkingDayDto workingdaytoworkingdaydto(WorkingDay workingDay)
	{
		WorkingDayDto workingDayDto = this.modelMapper.map(workingDay, WorkingDayDto.class);
		return workingDayDto;
	}
	
	public WorkingDay workingdaydtotoworkingday(WorkingDayDto workingDayDto)
	{
		WorkingDay workingDay = this.modelMapper.map(workingDayDto, WorkingDay.class);
		return workingDay;
	}

//	@Override
//	public String addEmployee(EmployeeDto employee) {
//		// TODO Auto-generated method stub
//		Employee employee2 = this.employeedtotoemployee(employee);
//		employeeRepsitory.save(employee2);
//		return "SuccessFully Added";
//	}

	@Override
	public List<Employee> getAllEmployee() {
		// TODO Auto-generated method stub
		List<Employee> findAll = employeeRepsitory.findAll();
		return findAll;//.stream().map(x->employeetoemployeedto(x)).collect(Collectors.toList());
	}

	
}
